@model Product
@{
    var userId = ViewBag.UserId;
    var reviews = ViewBag.Reviews as List<Models.Review>;
    var stock = (int)ViewBag.Stock;
}

<style>
    /* Product Card Styling */
    .product-card {
        display: flex;
        justify-content: space-between;
        gap: 30px; /* Space between image and details */
        flex-wrap: wrap; /* Allows wrapping in smaller screens */
        background: #f9f9f9;
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    /* Product Image Styling */
    .product-image-container {
        flex: 0 0 40%; /* Set the image container to take up 40% of the card */
        max-width: 400px; /* Limit the maximum width */
        height: auto;
    }

    .product-image {
        width: 100%; /* Ensure the image is responsive */
        height: auto;
        object-fit: contain; /* Ensures image fits within its container without cutting */
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    }

    /* Product Details Styling */
    .product-details {
        flex: 1; /* Takes up remaining space */
        max-width: 50%; /* Restrict the width of the details */
    }

    /* Reviews Section Styling */
    .reviews-section {
        background: #f7f7f7;
        border-radius: 12px;
        padding: 25px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

        .reviews-section h4 {
            color: #333;
            font-size: 1.5em;
            margin-bottom: 20px;
        }

    .review-item {
        background: #fff;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        border: 1px solid #ddd;
        transition: box-shadow 0.3s;
    }

        .review-item:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .review-item h5 {
            color: #007bff;
            font-size: 1.2em;
            margin-bottom: 10px;
        }

        .review-item p {
            color: #555;
        }

    .text-muted small {
        color: #777 !important;
    }

    /* Add Review Button */
    .add-review-btn {
        background: linear-gradient(135deg, #007bff, #6610f2);
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 12px 25px;
        font-size: 1.1em;
        text-align: center;
        display: inline-block;
        margin-top: 15px;
    }

        .add-review-btn:hover {
            background: linear-gradient(135deg, #6610f2, #007bff);
            transform: scale(1.05);
        }

    /* Input and Button Styling */
    .input-group {
        margin-top: 20px;
    }

    .form-control {
        border-radius: 5px;
    }

    .btn-light {
        background-color: #f8f9fa;
        border-color: #ddd;
        color: #007bff;
    }

        .btn-light:hover {
            background-color: #e2e6ea;
        }

    /* Badge styling for stock status */
    .badge-stock {
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 1em;
        font-weight: bold;
    }

    .badge-in-stock {
        background-color: #28a745;
        color: #fff;
    }

    .badge-out-of-stock {
        background-color: #dc3545;
        color: #fff;
    }

    /* Star rating styling */
    .star-rating {
        color: yellow;
        font-size: 1.5em;
    }

    .review-star-rating {
        color: yellow;
        font-size: 1.2em;
    }
</style>

<div class="container py-5">
    <div class="product-container">
        <!-- Product Card -->
        <div class="product-card">
            <!-- Product Image Section -->
            <div class="product-image-container">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="/Images/@Model.ImageUrl" class="product-image" alt="Product Image">
                }
            </div>

            <!-- Product Details Section -->
            <div class="product-details">
                <h3>@Model.Name</h3>
                <p>@Model.Description</p>
                <p><strong>Price:</strong> <span class="text-warning">$@Model.Price</span></p>
                <p>
                    <strong>Stock:</strong>
                    @if (Model.Stock > 0)
                    {
                        <span class="badge badge-stock badge-in-stock">@Model.Stock available</span>
                    }
                    else
                    {
                        <span class="badge badge-stock badge-out-of-stock">Out of Stock</span>
                    }
                </p>
                <p>
                    <strong>Rating:</strong>
                    <span class="star-rating">
                        @for (var i = 0; i < Model.Rating; i++)
                        {
                            <i class="fas fa-star"></i>
                        }
                    </span>
                </p>

                <!-- Add to Cart Form -->
                <form action="/Cart/AddToCart" method="post" class="mt-4">
                    <input type="hidden" name="ProductId" value="@Model.Id" />
                    <div class="input-group">
                        <input type="number" name="Count" class="form-control"
                               placeholder="Quantity"
                               min="1" max="@stock"
                               required />
                        <button type="submit" class="btn btn-light">Add To Cart</button>
                    </div>
                    <small class="text-muted">Maximum available: @stock</small>
                </form>
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div class="reviews-section mt-4">
        <h4>Customer Reviews</h4>
        @if (reviews != null && reviews.Any())
        {
            @foreach (var review in reviews)
            {
                <div class="review-item">
                    <h5><i class="fas fa-user icon"></i>@review.User.UserName</h5>
                    <p>
                        <span class="review-star-rating">
                            @for (var i = 0; i < review.Rating; i++)
                            {
                                <i class="fas fa-star"></i>
                            }
                        </span>
                    </p>
                    <p>@review.Comment</p>
                    <small class="text-muted">Posted on: @review.CreatedAt.ToShortDateString()</small>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No reviews yet. Be the first to review this product!</p>
        }

        @if (userId != null && ViewBag.HasPurchased == true)
        {
            <a href="@Url.Action("Create", "Review", new { productId = Model.Id, userId = userId })"
               class="btn add-review-btn mt-3">Write a Review</a>
        }
        else if (userId != null)
        {
            <p class="mt-3">You can only review products you have purchased.</p>
        }
        else
        {
            <p class="mt-3">You must be logged in to add a review.</p>
        }
    </div>
</div>
